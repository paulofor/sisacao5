import { EventEmitter, NgZone, OnDestroy, Renderer } from '@angular/core';
import { Subscription } from 'rxjs';
import { UploadFile } from './upload-file.model';
import { UploadEvent } from './upload-event.model';
export declare class FileComponent implements OnDestroy {
    private zone;
    private renderer;
    headertext: string;
    customstyle: string;
    disableIf: boolean;
    onFileDrop: EventEmitter<UploadEvent>;
    onFileOver: EventEmitter<any>;
    onFileLeave: EventEmitter<any>;
    stack: any[];
    files: UploadFile[];
    subscription: Subscription;
    dragoverflag: boolean;
    globalDisable: boolean;
    globalStart: Function;
    globalEnd: Function;
    numOfActiveReadEntries: number;
    constructor(zone: NgZone, renderer: Renderer);
    onDragOver(event: Event): void;
    onDragLeave(event: Event): void;
    dropFiles(event: any): void;
    private traverseFileTree(item, path);
    private addToQueue(item);
    pushToStack(str: any): void;
    popToStack(): void;
    private clearQueue();
    private preventAndStop(event);
    ngOnDestroy(): void;
}
