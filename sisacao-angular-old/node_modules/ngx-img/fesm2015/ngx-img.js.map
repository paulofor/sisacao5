{"version":3,"file":"ngx-img.js","sources":["ng://ngx-img/module/utils.ts","ng://ngx-img/module/service/ngx-img.service.ts","ng://ngx-img/module/component/ngx-img.component.ts","ng://ngx-img/module/component/ngx-img-crop.component.ts","ng://ngx-img/module/ngx-img.module.ts","ng://ngx-img/ngx-img.ts"],"sourcesContent":["export const getMimeType = (src?: string) => src ? src.substring('data:'.length, src.indexOf(';base64')) : '';\n","import {Injectable} from '@angular/core';\nimport {getMimeType} from '../utils';\n\n@Injectable()\nexport class NgxImgService {\n  compress(src: string, config: any) {\n    const mimeType = getMimeType(src);\n    return new Promise((resolve: any, reject: any) => {\n      const img = new Image();\n      img.src = src;\n      img.onerror = () => {\n        reject();\n      };\n      img.onload = () => {\n        const cvs = document.createElement('canvas');\n        const ctx = cvs.getContext('2d');\n        const aspectRatio = img.naturalWidth / img.naturalHeight;\n\n        let maxWidth = config.maxWidth ? config.maxWidth : Infinity;\n        let maxHeight = config.maxHeight ? config.maxHeight : Infinity;\n        let minWidth = config.minWidth ? config.minWidth : 0;\n        let minHeight = config.minHeight ? config.minHeight : 0;\n\n        let width = img.naturalWidth;\n        let height = img.naturalHeight;\n\n        if (maxWidth < Infinity && maxHeight < Infinity) {\n          if (maxHeight * aspectRatio > maxWidth) {\n            maxHeight = maxWidth / aspectRatio;\n          } else {\n            maxWidth = maxHeight * aspectRatio;\n          }\n        } else if (maxWidth < Infinity) {\n          maxHeight = maxWidth / aspectRatio;\n        } else if (maxHeight < Infinity) {\n          maxWidth = maxHeight * aspectRatio;\n        }\n\n        if (minWidth > 0 && minHeight > 0) {\n          if (minHeight * aspectRatio > minWidth) {\n            minHeight = minWidth / aspectRatio;\n          } else {\n            minWidth = minHeight * aspectRatio;\n          }\n        } else if (minWidth > 0) {\n          minHeight = minWidth / aspectRatio;\n        } else if (minHeight > 0) {\n          minWidth = minHeight * aspectRatio;\n        }\n\n        width = Math.min(Math.max(width, minWidth), maxWidth);\n        height = Math.min(Math.max(height, minHeight), maxHeight);\n\n        const destX = -width / 2;\n        const destY = -height / 2;\n        const destWidth = width;\n        const destHeight = height;\n\n        cvs.width = width;\n        cvs.height = height;\n\n        ctx.translate(width / 2, height / 2);\n        ctx.scale(1, 1);\n        ctx.drawImage(\n          img,\n          Math.floor(destX),\n          Math.floor(destY),\n          Math.floor(destWidth),\n          Math.floor(destHeight)\n        );\n        ctx.restore();\n        resolve(cvs.toDataURL(mimeType, config.quality));\n      };\n    });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input, OnChanges,\n  OnDestroy,\n  OnInit,\n  Output, SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {NgxImgService} from '../service/ngx-img.service';\n\n@Component({\n  selector: 'ngx-img',\n  templateUrl: './ngx-img.component.html',\n  styleUrls: ['./ngx-img.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxImgComponent implements OnInit, OnDestroy, OnChanges {\n  @Input() alt = '';\n  @Input() fileName = '';\n  @Input() imgSrc = '';\n  @Input() remove = true;\n  @ViewChild('fileInput') fileInput: any;\n  @Input() config: {\n    fileSize?: number,\n    minWidth?: number,\n    maxWidth?: number,\n    minHeight?: number,\n    maxHeight?: number,\n    fileType?: string[],\n    height?: number,\n    quality?: number,\n    crop?: any\n  };\n  @Input() errorTexts: {\n    fileSize?: string,\n    minWidth?: string,\n    maxWidth?: string,\n    minHeight?: string,\n    maxHeight?: string,\n    imageFormat?: string,\n    fileType?: string\n  };\n  @Input() text: {\n    default?: string,\n    _default?: string,\n    button?: string,\n    try_again?: string,\n    replace?: string,\n    reset?: string,\n    error?: string\n  };\n\n  hasPreview = false;\n  hasError = false;\n  isLoading = false;\n  _config: {\n    fileSize?: number,\n    minWidth?: number,\n    maxWidth?: number,\n    minHeight?: number,\n    maxHeight?: number,\n    fileType?: string[],\n    height?: number,\n    quality?: number,\n    crop?: any\n  } = {\n    fileSize: 2048,\n    minWidth: 0,\n    maxWidth: 0,\n    minHeight: 0,\n    maxHeight: 0,\n    fileType: ['.gif', '.jpeg', '.png', '.jpg'],\n    quality: 0.8\n  };\n  _text: {\n    default?: string,\n    _default?: string,\n    button?: string,\n    try_again?: string,\n    replace?: string,\n    reset?: string,\n    error?: string\n  } = {\n    default: 'Drag and drop',\n    _default: 'Drag and drop or click',\n    button: 'Choose File',\n    try_again: 'Try Again',\n    replace: 'Drag and drop or click to replace',\n    reset: 'Remove',\n    error: 'Oops, something wrong happened.'\n  };\n  _errorTexts: {\n    fileSize?: string,\n    minWidth?: string,\n    maxWidth?: string,\n    minHeight?: string,\n    maxHeight?: string,\n    imageFormat?: string,\n    fileType?: string\n  } = {\n    fileSize: 'The file size is too big ({{ value }} max).',\n    minWidth: 'The image width is too small ({{ value }}}px min).',\n    maxWidth: 'The image width is too big ({{ value }}}px max).',\n    minHeight: 'The image height is too small ({{ value }}}px min).',\n    maxHeight: 'The image height is too big ({{ value }}}px max).',\n    imageFormat: 'The image format is not allowed ({{ value }} only).',\n    fileType: 'The file type is not allowed.'\n  };\n  errors: any = [];\n  file: any;\n  mode = 'upload';\n  @Output() onChange: EventEmitter<any> = new EventEmitter();\n  @Output() onSelect: EventEmitter<any> = new EventEmitter();\n  @Output() onReset: EventEmitter<any> = new EventEmitter();\n\n  constructor(private _service: NgxImgService, private _ref: ChangeDetectorRef) {\n    this.reset();\n  }\n\n  ngOnInit() {\n    this._text = Object.assign(this._text, this.text);\n    this._errorTexts = Object.assign(this._errorTexts, this.errorTexts);\n    this._config = Object.assign(this._config, this.config);\n    this.markForCheck();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.imgSrc && changes.imgSrc.isFirstChange()) {\n      if (this.imgSrc) {\n        this.hasPreview = true;\n        if (this.config && this.config.crop) {\n          this.mode = 'crop';\n        }\n        this.markForCheck();\n      }\n    }\n  }\n\n  fileChangeListener(e: any) {\n    this.hasError = false;\n    this.errors = [];\n    if (!e.target.files.length) {\n      this.reset();\n      return false;\n    }\n\n    this.file = e.target.files[0];\n    if (!this.validate()) {\n      this.hasError = true;\n      this.reset();\n      return false;\n    }\n\n    this.fileName = this.file.name;\n    this.onChange.emit(this.file);\n\n    if (this.file.type.split('/')[0] === 'image') {\n      this.isLoading = true;\n      const reader: FileReader = new FileReader();\n      reader.onloadend = (ev: any) => {\n        this.imgSrc = ev.target.result;\n        this.fileName = this.file.name;\n        this.hasPreview = true;\n        this.isLoading = false;\n        if (this._config.crop) {\n          this.mode = 'crop';\n          this.markForCheck();\n        } else {\n          this._service.compress(this.imgSrc, this._config).then((res: any) => {\n            this.onSelectEvent(res);\n            this.markForCheck();\n          })\n            .catch(() => {\n              this.onSelectEvent(this.imgSrc);\n              this.markForCheck();\n            });\n        }\n      };\n      reader.readAsDataURL(this.file);\n      this.markForCheck();\n    }\n    this.markForCheck();\n  }\n\n  reset() {\n    this.mode = 'upload';\n    this.file = null;\n    this.imgSrc = '';\n    this.fileName = '';\n    this.hasPreview = false;\n    if (this.fileInput) {\n      this.fileInput.nativeElement.value = '';\n    }\n    this.onReset.emit();\n    this.markForCheck();\n  }\n\n  validate() {\n    this.errors = [];\n    if (this._config.fileType.length !== 0 &&\n      this._config.fileType.indexOf(this.file.type) === -1 && this._config.fileType.indexOf(`.${this.file.name.split('.').pop()}`) === -1) {\n      this.errors = [...this.errors, this._errorTexts.fileType];\n    }\n\n    if (this._config.fileSize !== 0 && (this.file.size / 1024) > this._config.fileSize) {\n      this.errors = [...this.errors, this._errorTexts.fileSize.replace('{{ value }}', this.sizeToByte(this._config.fileSize))];\n    }\n\n    if (this._config.minWidth !== 0 && this._config.minWidth >= this.file.width) {\n      this.errors = [...this.errors, this._errorTexts.minWidth.replace('{{ value }}', this._config.minWidth.toString())];\n    }\n\n    if (this._config.maxWidth !== 0 && this._config.maxWidth <= this.file.width) {\n      this.errors = [...this.errors, this._errorTexts.maxWidth.replace('{{ value }}', this._config.maxWidth.toString())];\n    }\n\n    if (this._config.minHeight !== 0 && this._config.minHeight >= this.file.height) {\n      this.errors = [...this.errors, this._errorTexts.minHeight.replace('{{ value }}', this._config.minHeight.toString())];\n    }\n\n    if (this._config.maxHeight !== 0 && this._config.maxHeight <= this.file.height) {\n      this.errors = [...this.errors, this._errorTexts.maxHeight.replace('{{ value }}', this._config.maxHeight.toString())];\n    }\n\n    return !this.errors.length;\n  }\n\n  sizeToByte(size: number): string {\n    const units = ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let i = 0;\n    while (size >= 1024) {\n      size /= 1024;\n      ++i;\n    }\n    return size.toFixed(1) + ' ' + units[i];\n  };\n\n  onSelectEvent(data: any) {\n    this.onSelect.emit(data);\n    this.markForCheck();\n  }\n\n  public markForCheck() {\n    setTimeout(() => {\n      if (!this._ref['destroyed']) {\n        this._ref.markForCheck();\n        this._ref.detectChanges();\n      }\n    });\n    setTimeout(() => {\n      if (!this._ref['destroyed']) {\n        this._ref.markForCheck();\n        this._ref.detectChanges();\n      }\n    }, 300);\n  }\n\n  ngOnDestroy() {\n    this.reset();\n    this._ref.detach();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n  ElementRef\n} from '@angular/core';\nimport Cropper from 'cropperjs';\nimport {NgxImgService} from '../service/ngx-img.service';\nimport {getMimeType} from '../utils';\n\n@Component({\n  selector: 'ngx-img-crop',\n  templateUrl: './ngx-img-crop.component.html',\n  styleUrls: ['./ngx-img-crop.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class NgxImgCropComponent implements OnInit, OnDestroy {\n  @Input() config: any = {};\n  @Input() imgSrc: any;\n  @Output() onCrop: EventEmitter<any> = new EventEmitter();\n  @Output() onReset: EventEmitter<any> = new EventEmitter();\n  _text = {\n    reset: 'Remove'\n  };\n\n  _config: any = {\n    crop: [\n      {\n        ratio: null,\n        viewMode: 0,\n      }\n    ]\n  };\n  timer: any = [];\n  cropper: any = [];\n  imgData: any = [];\n\n  constructor(private _service: NgxImgService, private _elementRef: ElementRef, private _ref: ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n    this._config = Object.assign(this._config, this.config);\n    this.cropper = [];\n    this.imgData = [];\n    this.initializeCrop();\n  }\n\n  initializeCrop() {\n    setTimeout(() => {\n      const mimeType = getMimeType(this.imgSrc);\n      this._config.crop.forEach((opt: any, i: number) => {\n        const el: any = this._elementRef.nativeElement.querySelector('#ngx-crop-img-' + i);\n        const options: any = {};\n        if (opt.width) {\n          options.width = opt.width;\n        }\n        if (opt.height) {\n          options.height = opt.height;\n        }\n        if (opt.minWidth) {\n          options.minWidth = opt.minWidth;\n        }\n        if (opt.minHeight) {\n          options.minHeight = opt.minHeight;\n        }\n        if (opt.maxWidth) {\n          options.maxWidth = opt.maxWidth;\n        }\n        if (opt.maxHeight) {\n          options.maxHeight = opt.maxHeight;\n        }\n        this.cropper[i] = new Cropper(el, {\n          aspectRatio: opt.ratio,\n          viewMode: opt.viewMode || 0,\n          autoCropArea: opt.autoCropArea || 0.8,\n          crop: () => {\n            if (this.timer[i]) {\n              clearTimeout(this.timer[i]);\n            }\n            this.timer[i] = setTimeout(() => {\n              this.onCropEvent(i, this.cropper[i].getCroppedCanvas(options).toDataURL(mimeType));\n              this.markForCheck();\n            }, 500);\n          }\n        });\n        this.markForCheck();\n      });\n      this.markForCheck();\n    }, 100);\n  }\n\n  onCropEvent(i: number, data: any) {\n    this._service.compress(data, this._config).then((res: any) => {\n      this.imgData[i] = res;\n      const img = this.imgData.length === 1 ? this.imgData[i] : this.imgData;\n      this.onCrop.emit(img);\n      this.markForCheck();\n    })\n    .catch(() => {\n      this.imgData[i] = data;\n      const img = this.imgData.length === 1 ? this.imgData[i] : this.imgData;\n      this.onCrop.emit(img);\n      this.markForCheck();\n    });\n  }\n\n  reset() {\n    this.cropper.forEach((el: any) => {\n      if (el) {\n        el.destroy();\n      }\n    });\n    this.cropper = [];\n    this.imgData = [];\n    this.imgSrc = '';\n    this.onReset.emit();\n    this.markForCheck();\n  }\n\n  public markForCheck() {\n    setTimeout(() => {\n      if (!this._ref['destroyed']) {\n        this._ref.markForCheck();\n        this._ref.detectChanges();\n      }\n    });\n    setTimeout(() => {\n      if (!this._ref['destroyed']) {\n        this._ref.markForCheck();\n        this._ref.detectChanges();\n      }\n    }, 300);\n  }\n\n  ngOnDestroy() {\n    this.reset();\n    this._ref.detach();\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {NgxImgComponent} from './component/ngx-img.component';\nimport {NgxImgCropComponent} from './component/ngx-img-crop.component';\nimport {NgxImgService} from './service/ngx-img.service';\n\n// Export module's public API\nexport {NgxImgComponent} from './component/ngx-img.component';\nexport {NgxImgCropComponent} from './component/ngx-img-crop.component';\nexport {NgxImgService} from './service/ngx-img.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [NgxImgComponent, NgxImgCropComponent],\n  declarations: [NgxImgComponent, NgxImgCropComponent],\n  providers: [NgxImgService]\n})\nexport class NgxImgModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxImgModule,\n      providers: [NgxImgService]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}