{
  "version": 3,
  "file": "ngx-file-drop.js",
  "sources": [
    "ng://ngx-file-drop/out/src/lib/ngx-drop/file-drop.module.ts",
    "ng://ngx-file-drop/out/src/lib/ngx-drop/file-drop.component.ts",
    "ng://ngx-file-drop/out/src/lib/ngx-drop/upload-event.model.ts",
    "ng://ngx-file-drop/out/src/lib/ngx-drop/upload-file.model.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\r\nimport {FileComponent} from './file-drop.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FileComponent,\r\n  ],\r\n  exports: [FileComponent],\r\n  imports: [],\r\n  providers: [],\r\n  bootstrap: [FileComponent],\r\n})\r\nexport class FileDropModule {}\r\n",
    "import { Component, Input, Output, EventEmitter, NgZone, OnDestroy, Renderer } from '@angular/core';\r\nimport { timer, Subscription } from 'rxjs';\r\n\r\nimport { UploadFile } from './upload-file.model';\r\nimport { UploadEvent } from './upload-event.model';\r\nimport { FileSystemFileEntry, FileSystemEntryMetadata, FileSystemEntry, FileSystemDirectoryEntry } from './dom.types';\r\n\r\n@Component({\r\n  selector: 'file-drop',\r\n  template: `<div id=\"dropZone\"  [className]=\"customstyle\" [class.over]=\"dragoverflag\"\r\n    (drop)=\"dropFiles($event)\"\r\n    (dragover)=\"onDragOver($event)\" (dragleave)=\"onDragLeave($event)\">\r\n    <div class=\"content\">\r\n        <ng-content></ng-content>\r\n        {{headertext}}\r\n    </div>\r\n</div>\r\n`,\r\n  styles: [`.drop-zone{margin:auto;height:100px;border:2px dotted #0782d0;border-radius:30px}.content{color:#0782d0;height:100px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.over{background-color:rgba(147,147,147,.5)}`]\r\n})\r\n\r\n\r\nexport class FileComponent implements OnDestroy {\r\n\r\n  @Input()\r\n  headertext: string = '';\r\n  @Input()\r\n  customstyle: string = null;\r\n  @Input()\r\n  disableIf: boolean = false;\r\n\r\n  @Output()\r\n  public onFileDrop: EventEmitter<UploadEvent> = new EventEmitter<UploadEvent>();\r\n  @Output()\r\n  public onFileOver: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output()\r\n  public onFileLeave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  stack = [];\r\n  files: UploadFile[] = [];\r\n  subscription: Subscription;\r\n  dragoverflag: boolean = false;\r\n\r\n  globalDisable: boolean = false;\r\n  globalStart: Function;\r\n  globalEnd: Function;\r\n\r\n  numOfActiveReadEntries = 0\r\n\r\n  constructor(\r\n    private zone: NgZone,\r\n    private renderer: Renderer\r\n  ) {\r\n    if (!this.customstyle) {\r\n      this.customstyle = 'drop-zone';\r\n    }\r\n    this.globalStart = this.renderer.listen('document', 'dragstart', (evt) => {\r\n      this.globalDisable = true;\r\n    });\r\n    this.globalEnd = this.renderer.listen('document', 'dragend', (evt) => {\r\n      this.globalDisable = false;\r\n    });\r\n  }\r\n\r\n  public onDragOver(event: Event): void {\r\n    if (!this.globalDisable && !this.disableIf) {\r\n      if (!this.dragoverflag) {\r\n        this.dragoverflag = true;\r\n        this.onFileOver.emit(event);\r\n      }\r\n      this.preventAndStop(event);\r\n    }\r\n  }\r\n\r\n  public onDragLeave(event: Event): void {\r\n    if (!this.globalDisable && !this.disableIf) {\r\n      if (this.dragoverflag) {\r\n        this.dragoverflag = false;\r\n        this.onFileLeave.emit(event);\r\n      }\r\n      this.preventAndStop(event);\r\n    }\r\n  }\r\n\r\n  dropFiles(event: any) {\r\n    if (!this.globalDisable && !this.disableIf) {\r\n      this.dragoverflag = false;\r\n      event.dataTransfer.dropEffect = 'copy';\r\n      let length;\r\n      if (event.dataTransfer.items) {\r\n        length = event.dataTransfer.items.length;\r\n      } else {\r\n        length = event.dataTransfer.files.length;\r\n      }\r\n\r\n      for (let i = 0; i < length; i++) {\r\n        let entry: FileSystemEntry;\r\n        if (event.dataTransfer.items) {\r\n          if (event.dataTransfer.items[i].webkitGetAsEntry) {\r\n            entry = event.dataTransfer.items[i].webkitGetAsEntry();\r\n          }\r\n        } else {\r\n          if (event.dataTransfer.files[i].webkitGetAsEntry) {\r\n            entry = event.dataTransfer.files[i].webkitGetAsEntry();\r\n          }\r\n        }\r\n        if (!entry) {\r\n          const file: File = event.dataTransfer.files[i];\r\n          if (file) {\r\n            const fakeFileEntry: FileSystemFileEntry = {\r\n              name: file.name,\r\n              isDirectory: false,\r\n              isFile: true,\r\n              file: (callback: (filea: File) => void): void => {\r\n                callback(file)\r\n              }\r\n            }\r\n            const toUpload: UploadFile = new UploadFile(fakeFileEntry.name, fakeFileEntry);\r\n            this.addToQueue(toUpload);\r\n          }\r\n        } else {\r\n          if (entry.isFile) {\r\n            const toUpload: UploadFile = new UploadFile(entry.name, entry);\r\n            this.addToQueue(toUpload);\r\n          } else if (entry.isDirectory) {\r\n            this.traverseFileTree(entry, entry.name);\r\n          }\r\n        }\r\n      }\r\n\r\n      this.preventAndStop(event);\r\n\r\n      const timerObservable = timer(200, 200);\r\n      this.subscription = timerObservable.subscribe(t => {\r\n        if (this.files.length > 0 && this.numOfActiveReadEntries === 0) {\r\n          this.onFileDrop.emit(new UploadEvent(this.files));\r\n          this.files = [];\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  private traverseFileTree(item: FileSystemEntry, path: string) {\r\n\r\n    if (item.isFile) {\r\n      const toUpload: UploadFile = new UploadFile(path, item);\r\n      this.files.push(toUpload);\r\n      this.zone.run(() => {\r\n        this.popToStack();\r\n      });\r\n    } else {\r\n      this.pushToStack(path);\r\n      path = path + '/';\r\n      const dirReader = (item as FileSystemDirectoryEntry).createReader();\r\n      let entries = [];\r\n      const thisObj = this;\r\n\r\n      const readEntries = function () {\r\n        thisObj.numOfActiveReadEntries++\r\n        dirReader.readEntries(function (res) {\r\n          if (!res.length) {\r\n            // add empty folders\r\n            if (entries.length === 0) {\r\n              const toUpload: UploadFile = new UploadFile(path, item);\r\n              thisObj.zone.run(() => {\r\n                thisObj.addToQueue(toUpload);\r\n              });\r\n            } else {\r\n              for (let i = 0; i < entries.length; i++) {\r\n                thisObj.zone.run(() => {\r\n                  thisObj.traverseFileTree(entries[i], path + entries[i].name);\r\n                });\r\n              }\r\n            }\r\n            thisObj.zone.run(() => {\r\n              thisObj.popToStack();\r\n            });\r\n          } else {\r\n            // continue with the reading\r\n            entries = entries.concat(res);\r\n            readEntries();\r\n          }\r\n          thisObj.numOfActiveReadEntries--\r\n        });\r\n      };\r\n\r\n      readEntries();\r\n    }\r\n  }\r\n\r\n  private addToQueue(item: UploadFile) {\r\n    this.files.push(item);\r\n  }\r\n\r\n  pushToStack(str) {\r\n    this.stack.push(str);\r\n  }\r\n\r\n  popToStack() {\r\n    const value = this.stack.pop();\r\n  }\r\n\r\n  private clearQueue() {\r\n    this.files = [];\r\n  }\r\n\r\n  private preventAndStop(event) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    this.globalStart();\r\n    this.globalEnd();\r\n  }\r\n}\r\n",
    "import { UploadFile } from './upload-file.model';\r\n\r\nexport class UploadEvent {\r\n    constructor(\r\n        public files: UploadFile[]) {\r\n    }\r\n}\r\n",
    "import { FileSystemEntry, FileSystemFileEntry, FileSystemDirectoryEntry } from './dom.types';\r\n\r\n/**\r\n * fileEntry is an instance of {@link FileSystemFileEntry} or {@link FileSystemDirectoryEntry}.\r\n * Which one is it can be checked using {@link FileSystemEntry.isFile} or {@link FileSystemEntry.isDirectory}\r\n * properties of the given {@link FileSystemEntry}.\r\n */\r\nexport class UploadFile {\r\n    constructor(\r\n        public relativePath: string,\r\n        public fileEntry: FileSystemEntry) {\r\n    }\r\n}\r\n"
  ],
  "names": [],
  "mappings": "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"
}
